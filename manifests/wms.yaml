apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    datacube.service: wms
  name: wms
spec:
  replicas: 10
  selector:
    matchLabels: 
      datacube.service: wms
  strategy: 
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      creationTimestamp: null
      labels:
        datacube.service: wms
    spec:
      containers:
      - name: wms
        env:
        - name: WMS_CONFIG_URL
          value: https://raw.githubusercontent.com/GeoscienceAustralia/dea-config/master/prod/services/wms/nrt/wms_cfg.py
        - name: DATACUBE_CONFIG_PATH
          value: /opt/odc/datacube.conf
        - name: DB_DATABASE
          value: postgres
        - name: DB_HOSTNAME
          value: dc-nrt-postgresql.default.svc.cluster.local
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: dc-nrt-postgresql
              key: postgres-password
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: awscredentials
              key: access-key
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: awscredentials
              key: secret-key
        - name: DB_USERNAME
          value: postgres
        - name: VIRTUAL_HOST
          value: localhost,127.0.0.
        image: opendatacube/wms:mdba
        ports:
        - containerPort: 8000
        resources: {}
        livenessProbe:
          httpGet:
            path: /?version=1.3.0&request=GetCapabilities&service=WMS
            port: 8000
          timeoutSeconds: 1
          initialDelaySeconds: 3
        args: ["gunicorn", "-b", "0.0.0.0:8000", "-w", "5", "--timeout", "300", "datacube_wms.wsgi"]
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    datacube.service: wms
  name: wms
spec:
  ports:
  - name: "80"
    port: 80
    targetPort: 8000
  selector:
    datacube.service: wms
status:
  loadBalancer: {}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
  name: wms
  namespace: default
spec:
  rules:
    - host: nrt-k.wms.gadevs.ga
      http:
        paths:
          - backend:
              serviceName: wms
              servicePort: 80
            path: /
